openapi: 3.0.0
info:
  title: Customer Management API
  version: 1.0.0
  description: API for managing customers, authentication, and related operations
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: /api/v1
    description: Default server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        message:
          type: string
        stack:
          type: string
          description: Only included in development environment

    PhoneNumber:
      type: object
      properties:
        countryCode:
          type: string
          pattern: '^\+\d{1,3}$'
          example: "+1"
        number:
          type: string
          pattern: '^\d{10}$'
          example: "1234567890"
      required:
        - countryCode
        - number

    CustomField:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum: [string, number, select, date, boolean]
        required:
          type: boolean
        options:
          type: array
          items:
            type: string
        description:
          type: string
        isDefault:
          type: boolean
        validation:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
            pattern:
              type: string
            message:
              type: string

    Customer:
      type: object
      properties:
        _id:
          type: string
          format: objectid
        name:
          type: string
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
        assignedAdmin:
          type: object
          properties:
            _id:
              type: string
              format: objectid
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
        customFields:
          type: object
          additionalProperties: true
        isActive:
          type: boolean
        status:
          type: string
          enum: [active, inactive, pending, archived, blocked]
        tags:
          type: array
          items:
            type: string
        notes:
          type: string
        metadata:
          type: object
          properties:
            lastUpdatedBy:
              type: string
              format: objectid
            source:
              type: string
            importId:
              type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CustomerSchema:
      type: object
      properties:
        _id:
          type: string
          format: objectid
        fields:
          type: array
          items:
            $ref: "#/components/schemas/CustomField"
        version:
          type: number
        isActive:
          type: boolean
        metadata:
          type: object
          properties:
            lastUpdatedBy:
              type: string
              format: objectid
            changes:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date-time
                  updatedBy:
                    type: string
                    format: objectid
                  change:
                    type: object
                    properties:
                      type:
                        type: string
                        enum: [add, remove, modify]
                      field:
                        type: string
                      details:
                        type: object
                        additionalProperties: true

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        user:
          type: object
          properties:
            _id:
              type: string
              format: objectid
            email:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            roles:
              type: array
              items:
                type: string
            permissions:
              type: array
              items:
                type: string

    Statistics:
      type: object
      properties:
        total:
          type: number
        active:
          type: number
        inactive:
          type: number
        new30Days:
          type: number
        statusDistribution:
          type: object
          additionalProperties:
            type: number

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /customers/schema:
    get:
      tags:
        - Customer Schema
      summary: Get active customer schema
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Schema retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerSchema"

    put:
      tags:
        - Customer Schema
      summary: Update customer schema
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  type: array
                  items:
                    $ref: "#/components/schemas/CustomField"
      responses:
        "200":
          description: Schema updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerSchema"

  /customers:
    get:
      tags:
        - Customers
      summary: Get customers list
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: sortBy
          in: query
          schema:
            type: string
            default: createdAt
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: search
          in: query
          schema:
            type: string
        - name: assignedAdmin
          in: query
          schema:
            type: string
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          schema:
            type: string
            format: date
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, pending, archived, blocked]
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
        - name: format
          in: query
          schema:
            type: string
            enum: [csv, xlsx]
      responses:
        "200":
          description: Customers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      customers:
                        type: array
                        items:
                          $ref: "#/components/schemas/Customer"
                      total:
                        type: number
                      page:
                        type: number
                      limit:
                        type: number
                      totalPages:
                        type: number
                  message:
                    type: string

    post:
      tags:
        - Customers
      summary: Create new customer
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phoneNumber:
                  $ref: "#/components/schemas/PhoneNumber"
                assignedAdmin:
                  type: string
                  format: objectid
                customFields:
                  type: object
                  additionalProperties: true
                status:
                  type: string
                  enum: [active, inactive, pending, archived, blocked]
                tags:
                  type: array
                  items:
                    type: string
                notes:
                  type: string
              required:
                - name
                - phoneNumber
                - assignedAdmin
      responses:
        "201":
          description: Customer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Customer"
                  message:
                    type: string

  /customers/statistics:
    get:
      tags:
        - Customers
      summary: Get customer statistics
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Statistics"
                  message:
                    type: string

  /customers/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: objectid

    get:
      tags:
        - Customers
      summary: Get customer by ID
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Customer retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Customer"
                  message:
                    type: string

    put:
      tags:
        - Customers
      summary: Update customer
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phoneNumber:
                  $ref: "#/components/schemas/PhoneNumber"
                assignedAdmin:
                  type: string
                  format: objectid
                customFields:
                  type: object
                  additionalProperties: true
                isActive:
                  type: boolean
                status:
                  type: string
                  enum: [active, inactive, pending, archived, blocked]
                tags:
                  type: array
                  items:
                    type: string
                notes:
                  type: string
      responses:
        "200":
          description: Customer updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Customer"
                  message:
                    type: string

    delete:
      tags:
        - Customers
      summary: Delete customer
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Customer deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /customers/bulk-update:
    post:
      tags:
        - Customers
      summary: Bulk update customers
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                    format: objectid
                updates:
                  type: object
                  properties:
                    status:
                      type: string
                      enum: [active, inactive, pending, archived, blocked]
                    isActive:
                      type: boolean
                    assignedAdmin:
                      type: string
                      format: objectid
                    tags:
                      type: array
                      items:
                        type: string
                    customFields:
                      type: object
                      additionalProperties: true
              required:
                - ids
                - updates
      responses:
        "200":
          description: Customers updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updated:
                    type: number
