name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: 20.x
  PNPM_VERSION: 8

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}
        run_install: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: pnpm install

    - name: Lint check
      run: pnpm run lint:check
      
    - name: Build
      run: pnpm run build
      env:
        NODE_ENV: production

    - name: Prepare deployment
      run: |
        # Create a temp directory for deployment
        mkdir -p deploy
        
        # Copy build files
        cp -r dist/* deploy/
        
        # Copy root level configuration files
        cp package.json deploy/
        cp pnpm-lock.yaml deploy/
        cp tsconfig.json deploy/
        cp eslint.config.js deploy/
        
        # List all files being deployed
        echo "Files to be deployed:"
        ls -la deploy/

    - name: Deploy to FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy/
        server-dir: /
        dangerous-clean-slate: true
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.env

    - name: Cleanup
      if: always()
      run: |
        rm -rf dist
        rm -rf deploy